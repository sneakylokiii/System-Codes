using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.OleDb; // For connecting to Access databases
using System.Drawing;
using System.IO; // For handling file and memory streams
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing.Imaging; // For working with images


namespace WindowsFormsApplication1
{
    public partial class Form4 : Form
    {
        OleDbConnection conn; // Manages the connection to the Access database
        OleDbCommand cmd; // Executes SQL commands
        OleDbDataAdapter adapter; // Bridges data between Access and the application
        DataTable dt; // Stores data in-memory for binding to controls
        private bool isImageUploaded = false; // Tracks if an image is uploaded

        public Form4()
        {
            InitializeComponent();
        }
        void GetUsers()
        {
            conn = new OleDbConnection("Provider=Microsoft.ACE.OleDb.12.0;Data Source=Login.accdb");
            dt = new DataTable();
            adapter = new OleDbDataAdapter("SELECT * FROM products", conn);
            conn.Open();
            adapter.Fill(dt);
            dgvProducts.DataSource = dt;
            conn.Close();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            Form2 form2 = new Form2();  // Admin Form
            form2.Show();
            this.Hide();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void Form4_Load(object sender, EventArgs e)
        {
            GetUsers();
            dgvProducts.Columns["Photo"].Visible = false; // Hide the Photo column

        }

        private void button1_Click(object sender, EventArgs e)
        {
            // Check for required fields
            if (string.IsNullOrWhiteSpace(tbPN.Text) ||
                string.IsNullOrWhiteSpace(tbC.Text) || string.IsNullOrWhiteSpace(tbP16.Text) ||
                string.IsNullOrWhiteSpace(tbP22.Text) || pbImage.Image == null )
            {
                MessageBox.Show("Please fill in all fields.");
                return;
            }

           

            // SQL query to insert a new user
            string query = "INSERT INTO products ([ProductName], [Category], [Price(16oz)], [Price(22oz)], Photo) " +
                           "VALUES ( @pn, @c, @p16, @p22, @i)";
            cmd = new OleDbCommand(query, conn);

            // Add parameters from textboxes and controls
            cmd.Parameters.AddWithValue("@pn", tbPN.Text);
            cmd.Parameters.AddWithValue("@c", tbC.Text);
            cmd.Parameters.AddWithValue("@p16", tbP16.Text);
            cmd.Parameters.AddWithValue("@p22", tbP22.Text);

            // Convert the image to a byte array and add it to the parameters
            using (MemoryStream ms = new MemoryStream())
            {
                pbImage.Image.Save(ms, pbImage.Image.RawFormat);
                cmd.Parameters.AddWithValue("@i", ms.ToArray());
            }

            // Insert the new user
            conn.Open();
            cmd.ExecuteNonQuery();
            MessageBox.Show("Product Inserted Successfully");
            conn.Close();

            // Refresh DataGridView
            GetUsers();

        }

        private void btnUpload_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog
            {
                Filter = "Image Files|*.jpg;*.jpeg;*.png;*.bmp"
            };

            if (openFileDialog.ShowDialog() == DialogResult.OK)
            {
                pbImage.Image = new Bitmap(openFileDialog.FileName);
                isImageUploaded = true;
            }

        }

        private void button4_Click(object sender, EventArgs e)
        {
            tbPN.Clear();
            tbC.Clear();
            tbP16.Clear();
            tbP22.Clear();
            pbImage.Image = null;

        }

        private void dgvProducts_CellEnter(object sender, DataGridViewCellEventArgs e)
        {
            tbPN.Text = dgvProducts.CurrentRow.Cells[1].Value.ToString();
            tbC.Text = dgvProducts.CurrentRow.Cells[2].Value.ToString();
            tbP16.Text = dgvProducts.CurrentRow.Cells[3].Value.ToString();
            tbP22.Text = dgvProducts.CurrentRow.Cells[4].Value.ToString();

            if (dgvProducts.CurrentRow.Cells["Photo"].Value != DBNull.Value)
            {
                byte[] imgData = (byte[])dgvProducts.CurrentRow.Cells["Photo"].Value;
                using (MemoryStream ms = new MemoryStream(imgData))
                {
                    pbImage.Image = Image.FromStream(ms);
                }
            }
            else
            {
                pbImage.Image = null;
            }

        }

        private void tbS_TextChanged(object sender, EventArgs e)
        {
            string searchQuery = "SELECT * FROM products WHERE ProductName LIKE @i";
            adapter = new OleDbDataAdapter(searchQuery, conn);
            adapter.SelectCommand.Parameters.AddWithValue("@i", tbS.Text + "%");

            dt = new DataTable();
            conn.Open();
            adapter.Fill(dt);
            conn.Close();
            dgvProducts.DataSource = dt;

        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(tbPN.Text) ||
               string.IsNullOrWhiteSpace(tbC.Text) || string.IsNullOrWhiteSpace(tbP16.Text) || string.IsNullOrWhiteSpace(tbP22.Text))
            {
                MessageBox.Show("Please fill in all fields.");
                return;
            }

            string query = isImageUploaded
                ? "UPDATE products SET  [ProductName]=@pn, [Category]=@c, [Price(16oz)]=@p16, [Price(22oz)]=@p22, Photo=@i WHERE ProductID=@id "
                : "UPDATE products SET  [ProductName]=@pn, [Category]=@c, [Price(16oz)]=@p16, [Price(22oz)]=@p22 WHERE ProductID=@id ";

            cmd = new OleDbCommand(query, conn);

            cmd.Parameters.AddWithValue("@pn", tbPN.Text);
            cmd.Parameters.AddWithValue("@c", tbC.Text);
            cmd.Parameters.AddWithValue("@p16", tbP16.Text);
            cmd.Parameters.AddWithValue("@p22", tbP22.Text);

            if (isImageUploaded)
            {
                using (MemoryStream ms = new MemoryStream())
                {
                    pbImage.Image.Save(ms, pbImage.Image.RawFormat);
                    cmd.Parameters.AddWithValue("@i", ms.ToArray());
                }
            }

            cmd.Parameters.AddWithValue("@id", Convert.ToInt32(dgvProducts.CurrentRow.Cells[0].Value));

            conn.Open();
            cmd.ExecuteNonQuery();
            MessageBox.Show("Product Updated Successfully");
            conn.Close();

            GetUsers();

        }

        private void dgvProducts_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
    }
}
